head	1.3;
access;
symbols;
locks; strict;
comment	@// @;


1.3
date	99.12.28.15.24.19;	author tony;	state Exp;
branches;
next	1.2;

1.2
date	98.02.06.16.26.03;	author tony;	state Exp;
branches;
next	1.1;

1.1
date	96.02.16.22.52.30;	author tony;	state Exp;
branches;
next	;


desc
@Status after lab3
@


1.3
log
@Updatering för kursomgång period 3 2000.
@
text
@function pixels = discgausswinvtfft(inpic, sigma2,  k)

% DISCGAUSSFFTWINVTFFT(inpic, sigma2,  k) -- Tries to restore an image inpic
% which has been subject to Gaussian filtering with the (separable) 
% discrete analogue of the Gaussian kernel (see "help DISCGAUSSFFT").
%
% With H(omega) denoting the transfer function of the filter that
% is assumed to have distorted the image, the transfer function of
% the restoration filter is
%
%   H'(omega) = H(omega)^*/(|H(omega)|^2 + k^2)
%
% where k is a free parameter and sigma2 is the variance of the kernel.

ftransform = fft2(inpic);

[xsize ysize] = size(ftransform);
[x y] = meshgrid(0 : xsize-1, 0 : ysize-1);

transfer = exp(sigma2 * (cos(2 * pi*(x / xsize)) + cos(2 * pi*(y / ysize)) - 2));

pixels = real(ifft2(transfer ./ ((transfer .^2 + k*k)) .* ftransform));
@


1.2
log
@Minor update by TL.
@
text
@d3 12
@


1.1
log
@Initial revision
@
text
@d3 1
a3 1
gamma = 0.0;
a4 2
ftransform = fftshift(fft2(inpic));

d6 1
a6 1
[x y] = meshgrid(-xsize/2 : xsize/2-1, -ysize/2 : ysize/2 - 1);
d10 1
a10 1
pixels = ifft2(fftshift(transfer ./ ((transfer .^2 + k*k)) .* ftransform));
@
